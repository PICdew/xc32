<!-- This file contains a series of release note fragments processed
     by gnu-notes.  To add a note to it, use "gnu-notes -a
     $release_config binutils".  The TARGET line should contain a
     list of shell glob patterns for target names to which the note is
     relevant; it may be removed if it is relevant to all targets.
 -->

      <!-- UUID: ffcb78fc-8c9b-4829-adb4-1d4bed713ef8 -->
      <!-- TARGET: * -->
      <formalpara>
        <title>ELF Program Headers</title>
        <para>
          The linker now better diagnoses errors in the usage of
          <literal>FILEHDR</literal> and <literal>PHDRS</literal>
          keywords in <literal>PHDRS</literal> command of linker
          scripts.  Refer to the linker manual for more information.
        </para>
      </formalpara>

      <!-- UUID: 6bffb8c1-09c3-457c-9969-890d14b3fd09 -->
      <!-- TARGET: * -->
      <formalpara>
        <title>ELF file corruption with <command>strip</command></title>
        <para>
          A bug that caused <command>strip</command> to corrupt unusual
          ELF files has been fixed.
        </para>
      </formalpara>

      <!-- UUID: f987a361-4bce-476c-8858-49891d5b914c -->
      <!-- TARGET: arm-none-* arm-uclinuxeabi -->
      <formalpara>
        <title>ARM VFP assembler bug fix</title>
        <para>
          The assembler now correctly assembles the 
          <literal>vmls</literal>, <literal>vnmla</literal> and
          <literal>vnmls</literal> mnemonics.  Previously these were
          incorrectly assembled to different instructions.
        </para>
      </formalpara>

      <!-- UUID: 7b6b03ed-e019-4f4e-ae40-f1b8f0438e24 -->
      <!-- TARGET: arm-none-eabi arm-uclinuxeabi -->
      <formalpara>
        <title>ARM Cortex-R4F assembler bug fix</title>
        <para>
	  The assembler now correctly recognizes the
	  <option>-mcpu=cortex-r4f</option> command-line option to
	  select the Cortex-R4F processor.
        </para>
      </formalpara>

      <!-- UUID: 4a9b8a6c-d09b-480f-aa0b-91b276dd8f22 -->
      <!-- TARGET: arm*-* -->
      <formalpara>
        <title>VFP assembly mnemonics</title>
        <para>
	  The assembler now accepts unified assembly mnemonics for
	  VFP instructions (e.g. <literal>VADD.f32 s0, s0</literal>)
	  in legacy syntax mode.
        </para>
      </formalpara>

      <!-- UUID: 53de19e9-9cda-47d0-919d-c2c9d2442148 -->
      <!-- TARGET: arm* -->
      <formalpara>
        <title>Assembler validations fix</title>
        <para>
	  A bug in the assembler that caused some <literal>addw</literal> and
	  <literal>subw</literal> instructions with SP or PC as operand to be
	  wrongly rejected has been fixed.
        </para>
      </formalpara>

      <!-- UUID: 77dbd84d-b04a-470b-93ab-da468e17d611 -->
      <!-- TARGET: arm-*-* -->
      <formalpara>
        <title>Linker failure with Cortex-A8 erratum fix</title>
        <para>
	   A bug in the <option>--fix-cortex-a8</option> linker option
	   has been fixed.  The bug caused the linker either to
	   produce a <literal>bad value</literal> error, or to
	   silently generate an incorrect executable. 
        </para>
      </formalpara>

      <!-- UUID: f53b8c63-ffa4-4260-97b9-40224e1bee12 -->
      <!-- TARGET: * -->
      <formalpara>
        <title>Linker map address sorting</title>
        <para>
          The map generated by the linker <option>-Map</option> option
          now lists symbols sorted by address.
        </para>
      </formalpara>

      <!-- UUID: 407c995b-a471-4565-9af1-1204e870e7d3 -->
      <!-- TARGET: * -->
      <formalpara>
        <title>Binutils update</title>
        <para>
	  The binutils package has been updated to version
	  2.19.51.20090709 from the FSF trunk.  This update includes
	  numerous bug fixes.
        </para>
      </formalpara>

      <!-- UUID: fd0a51a1-84fa-4784-9cc5-7a2dd8d84d13 -->
      <!-- TARGET: arm-*-* -->
      <formalpara>
        <title>Assembler fix</title>
        <para>
          The assembler now correctly diagnoses a missing operand to
	  <code>bl</code> and <code>blx</code> instructions.
	  Previously, incorrect code was silently generated.
        </para>
      </formalpara>

      <!-- UUID: 4266dfa9-3503-4478-b5da-33765c047757 -->
      <!-- TARGET: arm-*-* -->
      <formalpara>
        <title>Linker fix</title>
        <para>
          The linker now correctly processes references to undefined
          local symbols.  Such references are treated the same as
          references to undefined global symbols.  Usually object
          files contain no such references, as they can never be
          satisfied.
        </para>
      </formalpara>

      <!-- UUID: 2785fd91-ea0e-485e-a035-3d6c89456553 -->
      <!-- TARGET: arm* -->
      <formalpara>
        <title>Internal error in assembler</title>
        <para>
	  An assembler bug that caused an internal error when
	  <literal>.thumb</literal> or <literal>.arm</literal> appears after an
	  invalid instruction has been fixed. 
        </para>
      </formalpara>

      <!-- UUID: 1ad9af69-5d89-4911-90fa-c2e33fa6ff0d -->
      <!-- TARGET: arm* -->
      <formalpara>
        <title>New assembler directive <literal>.inst</literal></title>
        <para>
	  The assembler now accepts the new <literal>.inst</literal>
	  directive to generate an instruction from its integer encoding.
        </para>
      </formalpara>

      <!-- UUID: 4af91f52-b0a2-442a-9625-79c80343a2b1 -->
      <!-- TARGET: arm*-* -->
      <formalpara>
        <title>Assembler validation improvements</title>
        <para>
	  The assembler now issues a warning when a section finishes with
	  an unclosed IT instruction block at the end of the input file.
	  It also now rejects unwinding directives that appear
	  outside of a <literal>.fnstart</literal>/<literal>.fnend</literal>
	  pair.
	  Additionally, 32-bit Thumb instructions are now correctly rejected
	  when assembling for cores that do not support these instructions.
        </para>
      </formalpara>

      <!-- UUID: 9b497c7b-7891-416d-910e-0fcdf8d4c029 -->
      <!-- TARGET: *-*-solaris* -->
      <formalpara>
        <title>Archiver fix</title>
        <para>
          A bug in the <command>ar</command> archiver has been fixed.
          This bug caused archive element manipulation to fail on
          Solaris hosts with an error indicating the archive is
          invalid.
        </para>
      </formalpara> 

      <!-- UUID: 67d65a3d-ef28-4bd7-ab26-00f807c5336f -->
      <!-- TARGET: arm* -->
      <formalpara>
       <title>
         <option>-mauto-it</option> assembler option replaced with
         <option>-mimplicit-it</option>
       </title>
       <para>
         The <option>-mauto-it</option> command-line option to the
	 assembler has been replaced with a more general
	 <option>-mimplicit-it</option> option to control the behavior
	 of the assembler when conditional instructions appear outside
	 an IT instruction block. If you were previously using
	 <option>-mauto-it</option>, you should now use
	 <option>-mimplicit-it=always</option>.  Other
	 <option>-mimplicit-it</option> modes allow you to separately
	 control implicit IT instruction insertion  behavior in ARM
	 and Thumb-2 code. For more information, refer to the
	 assembler manual.
	 In addition to renaming the option,
	 a number of bugs in the implicit IT generation have been fixed.
       </para>
      </formalpara> 

      <!-- UUID: 2d12e385-5b1d-4db3-b882-4dab8046be78 -->
      <!-- TARGET: *-elf *-eabi -->
      <formalpara>
        <title>Incorrect linker diagnostic removed</title>
        <para>
          The linker has been corrected to not emit an error message
          when the load address of an output section with no contents
          overlaps an output section with contents.  This can occur
          in linker scripts that use <code>MEMORY</code> regions and
          <code>AT&gt;</code> to place initialized contents into ROM.
        </para>
      </formalpara>

      <!-- UUID: acc60423-eed6-4edf-bccb-cb0673df1607 -->
      <!-- TARGET: arm* -->
      <formalpara>
        <title>Assembler fix for mixed Thumb and ARM mode</title>
        <para>
          A bug in the assembler has been fixed where mapping symbols were
          sometimes incorrectly placed at section boundaries.
          This could lead to incorrect disassembly in some cases.
        </para>
      </formalpara>

      <!-- UUID: 124dc057-10ab-4a26-9775-1d1c93197720 -->
      <!-- TARGET: arm-*-eabi arm-*-linux-gnueabi -->
      <formalpara>
        <title>Linking objects built without <option>-fPIC</option>
        into shared libraries</title>
        <para>
          The linker now gives an error for attempts to link object
          files built without <option>-fPIC</option> or
          <option>-fpic</option> into shared libraries when those
          objects use the ARMv7 <literal>MOVW</literal> and
          <literal>MOVT</literal> instructions in ways that are unsafe
          in a shared library.  Previously it built a shared library
          that behaved incorrectly when used.
        </para>
      </formalpara>

      <!-- UUID: da6d2078-621f-4335-a453-faf88fc880e1 -->
      <!-- TARGET: arm* -->
      <formalpara>
        <title>Linker bug fix</title>
        <para>
          A bug that caused the linker to crash when
          <literal>.ARM.exidx</literal> sections were discarded by a
          linker script has been fixed.
        </para>
      </formalpara>

      <!-- UUID: 9e8113f9-3f35-4a02-b2d5-75b1e33c2b64 -->
      <!-- TARGET: arm* -->
      <formalpara>
        <title>Overlay sections</title>
        <para>
          <command>&csl_target;-readelf</command> now correctly recognizes
          section headers for <literal>ARM_DEBUGOVERLAY</literal>
          and <literal>ARM_OVERLAYSECTION</literal> sections. 
        </para>
      </formalpara>

      <!-- UUID: 48bfa6ea-0a14-4244-8ae7-6c98df7a5af0 -->
      <!-- TARGET: arm* -->
      <formalpara>
        <title>Assembler bug fix</title>
        <para>
          A bug in the assembler that caused duplicate and missing
          mapping symbols has been fixed.  The bug caused incorrect
          <command>objdump</command> output and incorrect
          byte-swapping for BE8 configurations.
        </para>
      </formalpara>

      <!-- UUID: 008e8b19-0558-44bb-857f-d9d4e374be62 -->
      <!-- TARGET: arm* -->
      <formalpara>
        <title>Incorrect placement of linker-generated functions</title>
        <para>
          A bug that caused some linker-generated functions (including
	  stubs to support interworking from ARM mode to Thumb mode and
	  stubs to avoid processor errata) to be placed in data sections
	  has been fixed.
        </para>
      </formalpara>

      <!-- UUID: 56e090b9-59ae-407e-99ff-bd7394f956ed -->
      <!-- TARGET: arm*-eabi arm*-*-symbianelf* -->
      <formalpara>
        <title>Assembler floating-point format</title>
        <para>
          The assembler now defaults to VFP format for floating-point
	  numbers.  It previously defaulted to the legacy FPA format
	  if no <option>-mcpu</option> or <option>-march</option> option
	  was specified, or if a CPU with no floating-point unit was
	  specified.  This bug resulted in incorrect behavior of the
	  <literal>.double</literal> and <literal>.dcb.d</literal>
	  directives.
        </para>
      </formalpara>

      <!-- UUID: 17c94545-0e26-4e43-875e-beda6b284da2 -->
      <!-- TARGET: arm* -->
      <formalpara>
        <title>New option for automatically generating IT blocks</title>
        <para>
          The assembler now allows use of conditional Thumb-2 instructions without
          requiring explicit IT instructions.
          Use the <option>-mauto-it</option> command-line option to enable this
          automatic generation of IT instructions.
        </para>
      </formalpara>

      <!-- UUID: 95c4e639-658b-4a28-a4ad-5130f94bf6c9 -->
      <!-- TARGET: arm*-* -->
      <formalpara>
        <title>Linker crash with very large applications</title>
        <para>
	  A linker bug that caused a crash when linking very large
	  applications with the <option>--fix-cortex-a8</option>
	  command-line option has been fixed.
        </para>
      </formalpara>

      <!-- UUID: ba44838b-5aa0-42ad-997a-f0e023ff9f36 -->
      <!-- TARGET: powerpc*-* -->
      <formalpara>
        <title><code>tlbilx</code> encoding fix</title>
        <para>
          An assembler bug that resulted in an incorrect encoding of
          the <code>tlbilx</code> instruction and its extended
          mnemonics <code>tlbilxlpid</code>, <code>tlbilxpid</code>,
          and <code>tlbilxva</code> has been fixed.
        </para>
      </formalpara>

      <!-- UUID: ea667f31-d29b-4bae-9e4d-f1ddf2685162 -->
      <!-- TARGET: arm*-* -->
      <formalpara>
        <title>Maximum code alignment increased</title>
        <para>
          The maximum allowed code alignment has been increased from
          32 to 64 bytes. This change affects the <literal>.p2align</literal>
          and <literal>.align</literal> directives in GAS and the
	  <option>-falign-functions</option> GCC option.
        </para>
      </formalpara>

      <!-- UUID: b8a43713-0822-46ad-a94a-399741fc6260 -->
      <!-- TARGET: * -->
      <formalpara>
        <title>Linker script search path</title>
        <para>
          The bug in the linker has been fixed that caused it not to
          follow its documented behavior for searching for linker
          scripts named with the <option>-T</option> option.  Now
          scripts are looked up first in the current directory, then
          in library directories specified with <option>-L</option>
          command-line options, and finally in the default system
          linker script directory.
        </para>
      </formalpara>

      <!-- UUID: b8416773-1ce5-4d70-b241-c70ae1525564 -->
      <!-- TARGET: * -->
      <formalpara>
        <title><command>&csl_target;-objcopy</command> bug fix</title>
        <para>
          A bug has been fixed that caused
          <command>&csl_target;-objcopy</command> to issue an error
          when generating output in the Intel HEX format and using
          <option>--change-section-lma</option> to change section
          addresses.
        </para>
      </formalpara>

      <!-- UUID: be92b051-9a6a-4b6a-95c4-2428154476c1 -->
      <!-- TARGET: arm*-* -->
      <formalpara>
        <title>Cortex-A8 erratum workaround enabled for ARMv7-A</title>
        <para>
          The workaround for the erratum in Cortex-A8 processors mentioned
          below is now enabled by default if you are targeting the ARMv7-A
          architecture profile.  The workaround can be disabled by passing
          the <option>--no-fix-cortex-a8</option> option to the linker.
        </para>
      </formalpara>

      <!-- UUID: 2fd71d0a-bf80-42e3-9c1e-4e99f775f3c9 -->
      <!-- TARGET: *-elf *-eabi -->
      <formalpara>
        <title>Linker script load address processing</title>
        <para>
          A bug in the linker has been fixed affecting linker scripts
	  using <code>AT&gt;region</code> to set the load address.
	  This now follows the documented behavior of maintaining the
	  virtual address to load address difference in output section
	  statements.  Refer to the "Output Section LMA" section of the
	  linker manual for details of how to control the load address.
        </para>
      </formalpara>

      <!-- UUID: 5689bdb7-2ec3-43a5-88b9-a7a391601d05 -->
      <!-- TARGET: arm*-* -->
      <formalpara>
        <title>Stack backtracing and C++ exception handling</title>
        <para>
	  Improvements have been made to the linker in support of
	  C++ runtime exception handling and stack backtracing.
	  A problem that caused crashes during the backtrace of C routines
	  that were not compiled with the <option>-fexceptions</option>
	  option has been fixed.
	  In addition, the linker generates more compact stack unwinding
	  tables which can lead to smaller executables.
        </para>
      </formalpara>

      <!-- UUID: 865a0eda-cb43-42cb-8f5c-30ec22314a18 -->
      <!-- TARGET: arm*-* -->
      <formalpara>
        <title>Disassembler bug fix</title>
        <para>
          A bug has been fixed that caused incorrect disassembly of
          some object files with multiple sections whose symbol tables
          included symbols in the middle of functions.  These
          typically resulted from hand-written assembly.
        </para>
      </formalpara>

      <!-- UUID: fe48ee4b-b14d-4709-96f3-a344d1e2c5f1 -->
      <!-- TARGET: arm-*-linux-gnueabi -->
      <formalpara>
        <title>ARM EABI attributes</title>
        <para>
          An assembler bug that resulted in some object files
	  generated from hand-written assembly being incorrectly
 	  tagged as using VFP instructions has been fixed.  This
          tagging was harmless for objects linked with &csl_sgxx;
	  tools and libraries, but may have affected third-party
	  tools and libraries.
        </para>
      </formalpara>

      <!-- UUID: da81a6fe-ed1e-4b46-a7c2-9e7ba52404d0 -->
      <!-- TARGET: arm*-* -->
      <formalpara>
        <title>Erratum workaround for Cortex-A8 processors</title>
        <para>
          The linker now implements a workaround for an erratum
          in Cortex-A8 processors.  If you are targeting an
          affected part and wish to use the workaround, pass the
          <option>--fix-cortex-a8</option> option to the linker.
          Please contact ARM for further details of the erratum.
        </para>
      </formalpara>

      <!-- UUID: 698125c3-874e-4a37-8930-6d44ed5e99d0 -->
      <!-- TARGET: arm*-* -->
      <formalpara>
	<title>Assembler diagnostics for invalid instructions</title>
	<para>
	  The assembler now issues diagnostics for invalid
	  <literal>ADR</literal> and <literal>ADRL</literal> instructions.
	  Formerly, these invalid instructions were silently mis-assembled.
	  This assembler bug did not affect correct code.
	</para>
      </formalpara>

      <!-- UUID: 60745214-3234-4084-bd20-dc0a976da61f -->
      <!-- TARGET: arm* -->
      <formalpara>
        <title>Incorrect linker-generated functions</title>
        <para>
	  A bug that caused some linker-generated functions (such as stubs
	  to support interworking from ARM mode to Thumb mode) to contain only
	  <literal>nop</literal> instructions instead of correct code sequences
	  has been fixed.
        </para>
      </formalpara>

      <!-- UUID: 9409b630-cedb-45c8-bb9a-f70927bd8628 -->
      <!-- TARGET: * -->
      <formalpara>
	<title>Extraneous linker error messages</title>
	<para>
	  A linker bug that caused extraneous error messages of the form
	  <code>Dwarf Error: Offset (507) greater than or equal to
	 .debug_str size (421).</code> has been corrected.  This bug did not
	 affect the correctness of output binaries.
	</para>
      </formalpara>

      <!-- UUID: 117a9b26-2dc2-48c7-9bc9-8e22dd98c6a8 -->
      <!-- TARGET: mips-sde-elf* -->
      <formalpara>
        <title><command>&csl_target;-objdump</command> bug fix</title>
        <para>
          A bug has been fixed that caused
          <command>&csl_target;-objdump</command> to enter an infinite
	  loop.
        </para>
      </formalpara>

      <!-- UUID: a1758b91-2134-4b65-91e8-0196754ea230 -->
      <!-- TARGET: arm*-* -->
      <formalpara>
        <title>Assembler marking of data</title>
        <para>
          Data generated using the assembler directives
          <code>.ascii</code>, <code>.asciz</code>,
          <code>.dc.d</code>, <code>.dc.s</code>, <code>.dc.x</code>,
          <code>.dcb</code>, <code>.dcb.b</code>, <code>.dcb.d</code>,
          <code>.dcb.l</code>, <code>.dcb.s</code>,
          <code>.dcb.w</code>, <code>.dcb.x</code>, <code>.ds</code>,
          <code>.ds.b</code>, <code>.ds.d</code>, <code>.ds.l</code>,
          <code>.ds.p</code>, <code>.ds.s</code>, <code>.ds.w</code>,
          <code>.ds.x</code>, <code>.double</code>,
          <code>.fill</code>, <code>.float</code>,
          <code>.incbin</code>, <code>.single</code>,
          <code>.space</code>, <code>.skip</code>,
          <code>.string</code>, <code>.string8</code>,
          <code>.string16</code>, <code>.string32</code>,
          <code>.string64</code>, and <code>.zero</code> is now
          correctly marked by the assembler as data rather than code.
          This fixes incorrect byte-swapping of such data when linking
          for BE8 configurations.
        </para>
      </formalpara>

      <!-- UUID: 93538837-ca79-46d8-ad0f-7f32adad1843 -->
      <!-- TARGET: arm*-* -->
      <formalpara>
        <title><literal>DMB</literal>, <literal>DSB</literal>, and
         <literal>ISB</literal> instructions on ARMv6-M</title>
        <para>
          The assembler now accepts the <literal>DMB</literal>,
         <literal>DSB</literal>, and <literal>ISB</literal>
         instructions on ARMv6-M CPUs, including Cortex-M0 and
         Cortex-M1.  These instructions were incorrectly rejected on
	 these CPUs in previous releases.
        </para>
      </formalpara>

      <!-- UUID: 89dcf899-aa36-4dbf-b7cb-c909df7e9b56 -->
      <!-- TARGET: arm*-* -->
      <formalpara>
        <title><literal>CMP</literal> Thumb-2 instruction</title>
        <para>
	 The assembler no longer issues an error about
	 <literal>CMP</literal> instructions in which the second
	 argument is the stack pointer (<literal>r13</literal>), as
	 these are valid instructions.  However, use of the stack
	 pointer in this context is deprecated in the current ARM
	 architecture specification and the assembler now warns about
	 the deprecated use.
        </para>
      </formalpara>

      <!-- UUID: 1f093383-0dd2-4d8f-b8d7-eebf45516e96 -->
      <!-- TARGET: arm*-* -->
      <formalpara>
        <title>Improved NOP generation for Thumb-2 cores</title>
        <para>
	  The assembler now generates Thumb-2/ARMv6K architectural NOP
	  instructions when alignment padding is required in code sections.
        </para>
      </formalpara>

      <!-- UUID: db133a31-8e78-4ae4-a30d-ceb9a015e95c -->
      <!-- TARGET: mips* -->
      <formalpara>
	<title>New assembler option: <option>-mfix-24k</option></title>
	<para>
	  The assembler now accepts the <option>-mfix-24k</option>
	  command-line option.  The use of this option causes the
	  assembler to work around hardware errata in the <code>eret</code> and
	  <code>deret</code> instructions on 24K and 24KE cores.
	</para>
      </formalpara>

      <!-- UUID: 94b75df8-6398-427c-9513-1e1400a38450 -->
      <!-- TARGET: mips*-linux* -->
      <formalpara>
        <title><command>&csl_target;-objcopy</command> and
          <command>&csl_target;-strip</command> bug fix</title>
        <para>
          A bug has been fixed that caused
          <command>&csl_target;-objcopy</command> and
          <command>&csl_target;-strip</command> to corrupt prelinked
          binaries.
        </para>
      </formalpara>

      <!-- UUID: d6c6953e-1c1e-48c0-842a-7b08f5aeabaf -->
      <!-- TARGET: * -->
      <formalpara>
        <title>Binutils update</title>
        <para>
	  The binutils package has been updated to version
	  2.19.51.20090205 from the FSF trunk.  This update includes
	  numerous bug fixes.
        </para>
      </formalpara>


      <!-- UUID: da2a113a-6587-4b35-b1d4-cec225498ebf -->
      <!-- TARGET: arm* -->
      <formalpara>
        <title>ARM build attributes conformance improvements</title>
        <para>
          Several ARM EABI 2.07 conformance issues relating to the
          handling of build attributes in the assembler and linker have
          been fixed.  All build attribute types are now recognized,
          and can now be declared by name, in addition to by number.
          Support for merging attributes in the linker has been improved,
          and the linking of incompatible objects is now detected and
          rejected in more cases.
        </para>
      </formalpara>


      <!-- UUID: 613e1afe-ded9-4c4a-8af0-991fd87ea8b7 -->
      <!-- TARGET: arm*-* -->
      <formalpara>
        <title>Linker errors on non-ELF input</title>
        <para>
          A bug has been fixed that caused internal errors from the
          linker when linking non-ELF input files (with the
          <option>-b</option> or <option>--format</option> linker
          options).
        </para>
      </formalpara>

      <!-- UUID: fc386c98-d547-4fa2-bcf5-c7e180b48984 -->
      <!-- TARGET: arm* -->
      <formalpara>
        <title>Linker crash on incompatible input files</title>
        <para>
          Some third-party compilers, including ARM <trademark
          class="registered"> RealView</trademark> 4.0, produce a
          build attribute marking output files that are not
          compatible with the ABI for the ARM Architecture.  This
          attribute sometimes caused the linker to crash.  The linker now
          correctly issues an error message.
        </para>
      </formalpara>

      <!-- UUID: 6d2f799c-9393-4e51-914b-11128a59e8e1 -->
      <!-- TARGET: arm*-* -->
      <formalpara>
        <title>Undefined weak references in shared libraries</title>
        <para>
          A linker bug has been fixed affecting calls from Thumb code
          in shared libraries to functions that are undefined weak
          references when the shared library is linked.  Such calls
          executed as nops whether or not the functions were defined
          at run time.
          <phrase target-os="linux">
            This affected thread-related code in the Thumb-2 versions
            of the standard C++ library provided with &csl_sgxx;,
            causing some multithreaded C++ programs to crash.
          </phrase>
        </para>
      </formalpara>

      <!-- UUID: 189fc8ab-b04b-40a4-a30d-7b805a5b20b2 -->
      <!-- TARGET: * -->
      <formalpara hosts="windows">
        <title>Bug fix for assembly listing</title>
        <para>
	  A bug that caused the assembler to produce corrupted
	  listings (via the <option>-a</option> option) on Windows
	  hosts has been fixed.
        </para>
      </formalpara>

      <!-- UUID: 7bbfb94d-663e-44d2-8cd3-2a9320cda6d1 -->
      <!-- TARGET: arm*-* -->
      <formalpara>
        <title>Mixed-case NEON register aliases</title>
        <para>
	  An assembler bug that prevented NEON register aliases from being
	  created with mixed-case names using the <code>.dn</code> and
	  <code>.qn</code> directives has been fixed.  Previously only
	  aliases created with all-lowercase or all-uppercase names
	  worked correctly.
	</para>
      </formalpara>

      <!-- UUID: 132f11da-7c55-4b65-ace8-9aa90670bc11 -->
      <!-- TARGET: * -->
      <formalpara>
        <title>Bug fix for objcopy/strip</title>
        <para>
          An objcopy bug that corrupted COMDAT groups when creating new
	  binaries has been fixed.  This bug also affected
	  <command>strip -g</command>.
        </para>
      </formalpara>

      <!-- UUID: 06daa8cf-d70d-4aa9-acdf-6a22ab1582aa -->
      <!-- TARGET: arm*-* -->
      <formalpara>
        <title>Thumb-2 assembler fixes</title>
        <para>
	  The Thumb-2 encodings of <code>QADD</code>,
	  <code>QDADD</code>, <code>QSUB</code>, and
	  <code>QDSUB</code> have been corrected.  Previous versions
	  of the assembler generated incorrect object files for these
	  instructions.  The assembler now accepts the
	  <code>ORN</code>, <code>QASX</code>, <code>QSAX</code>,
	  <code>RRX</code>, <code>SHASX</code>, <code>SHSAX</code>,
	  <code>SSAX</code>, <code>USAX</code>, <code>UHASX</code>,
	  <code>UQSAX</code>, and <code>USAX</code> mnemonics.  The
	  assembler now detects and issues errors for invalid uses of
	  register 13 (the stack pointer) and register 15 (the program
	  counter) in many instructions.
        </para>
      </formalpara>

      <!-- UUID: 243e1aa2-8101-4f15-95b2-53578924d69a -->
      <!-- TARGET: * -->
      <formalpara>
	<title>Binutils support for DWARF Version 3</title>
	<para>
	  The <command>addr2line</command> command now supports
	  binaries containing DWARF 3 debugging information.  The
	  <command>ld</command> command can display error messages
	  with source locations for input files containing DWARF 3
	  debugging information.
	</para>
      </formalpara>

      <!-- UUID: ee3bc111-2494-4f85-8ed6-e100e7a92d10 -->
      <!-- TARGET: * -->
      <formalpara hosts="windows">
        <title>Bug fix for objdump on Windows</title>
        <para>
          An objdump bug that caused the <option>-S</option> option
          not to work on Windows in some cases has been fixed.
        </para>
      </formalpara>

      <!-- UUID: bde1b128-2681-49f4-9501-10d5b0ec95e9 -->
      <!-- TARGET: mips-sde-elf* -->
      <formalpara>
        <title>Unnecessary section removed</title>
        <para>
          A linker bug that caused an unnecessary <literal>.rel.dyn</literal>
	  section to be placed in the executable has been fixed.
        </para>
      </formalpara>

      <!-- UUID: c8d66487-f923-42f1-bf81-cc66eba96aea -->
      <!-- TARGET: mips*-* -->
      <formalpara>
	<title>Linker bug fix for <option>--gc-sections</option></title>
	<para>
	 A linker bug that caused certain linker-generated sections to be incorrectly
	 omitted from the executable when the <option>--gc-sections</option> option is
	 used has been fixed.
	</para> 
      </formalpara>

      <!-- UUID: a8317e5f-aa1d-444b-a88b-96e9c0ce9eae -->
      <!-- TARGET: mips*-linux* -->
      <formalpara>
	<title>Linker bug affecting Library Reduction Utility</title>
	<para>
	 A linker bug has been fixed that caused the
	 <command>&csl_target;-mklibs</command> Library Reduction Utility to
	 produce invalid output when relinking <filename>libc.so</filename>.
	 The bug could also affect linking of other shared libraries containing weak
	undefined symbols with non-default visibility.
	</para>
      </formalpara>

      <!-- UUID: a5f802b1-d838-4d77-8a69-1f94bcf677a0 -->
      <!-- TARGET: mips-*-* -->
      <formalpara>
        <title>"Can't find matching LO16" linker error fixed</title>
        <para>
	  An assembler bug that caused errors when linking files containing mixed MIPS16
	  and non-MIPS16 code has been fixed. 
        </para>
      </formalpara>

      <!-- UUID: a12b8952-2a0a-4a2a-aacc-f78e59f8387c -->
      <!-- TARGET: arm*-* -->
      <formalpara>
        <title>Thumb-2 <code>MUL</code> encoding</title>
        <para>
          In Thumb-2 mode, the assembler now encodes <code>MUL</code>
          as a 16-bit instruction (rather than as a 32-bit
          instruction) when possible.  This fix results in smaller
	  code, with no loss of performance.
        </para>
      </formalpara>

      <!-- UUID: cc1463ce-7146-4004-a170-b7a5e83b4b1d -->
      <!-- TARGET: arm*-* -->
      <formalpara>
        <title>Thumb-2 <code>RBIT</code> encoding</title>
        <para>
	  An assembler bug that resulted in incorrect encoding of the
	  Thumb-2 <code>RBIT</code> instruction has been fixed.
        </para>
      </formalpara>

      <!-- UUID: 2ccac58e-66fe-4074-a694-87d844f967a0 -->
      <!-- TARGET: arm*-* -->
      <formalpara>
        <title>Uppercase operands to IT instructions</title>
        <para>
	  The assembler now accepts both uppercase and lowercase operands
	  for the <code>IT</code> family of instructions.
        </para>
      </formalpara>

      <!-- UUID: 88b86fe4-7d22-423a-955b-e1d40c399eac -->
      <!-- TARGET: arm*-* -->
      <formalpara>
        <title>ARMv7 offset out of range errors</title>
        <para>
	  An assembler bug that resulted in
	  <literal>offset out of range</literal> errors when compiling for
	  ARMv7 processors has been fixed.
        </para>
      </formalpara>

      <!-- UUID: 9f4bc794-3bf6-4e32-b17e-da9644532334 -->
      <!-- TARGET: arm*-*-symbianelf* -->
      <formalpara>
        <title>Symbian binary relocation</title>
        <para>
          The linker now correctly generates relocations for writable
	  data as data-relative rather than text-relative.  The former
	  behavior caused runtime failures accessing writable data.
        </para>
      </formalpara>

      <!-- UUID: 74761753-44ea-4c62-8ce5-4fc2ccb2fd10 -->
      <!-- TARGET: *-elf *-eabi -->
      <formalpara>
        <title>Placing bss-like regions in load regions</title>
        <para>
          The linker no longer issues an incorrect error message when
          a bss-like section is placed at specific load region.
          The linker formerly incorrectly considered the section as
          taking up space in the load region.
        </para>
      </formalpara>

      <!-- UUID: 8d70f0f9-1368-45bf-b9c1-0626a82c7ba7 -->
      <!-- TARGET: arm*-* -->
      <formalpara>
        <title>NEON assembler symbols</title>
        <para>
	  An assembler bug that caused spurious undefined symbols to be
	  generated has been fixed.  The <code>mov d0, d1</code> instruction
	  would incorrectly cause an undefined symbol <literal>d1</literal>
	  to be created.
        </para>
      </formalpara>

      <!-- UUID: fadd610d-e7a5-4d32-be94-d30fd290e773 -->
      <!-- TARGET: mips*-linux* -->
      <formalpara>
        <title>MIPS local GOT space</title>
        <para>
          A linker bug that caused the error "not enough GOT space for local
          GOT entries" has been fixed.
        </para>
      </formalpara>

      <!-- UUID: d4eaaad4-8e09-445d-acf0-4776f9bc1d04 -->
      <!-- TARGET: * -->
      <formalpara>
        <title>Binutils update</title>
        <para>
	  The binutils package has been updated to version
	  2.18.50.20080215 from the FSF trunk.  This update includes
	  numerous bug fixes.
        </para>
      </formalpara>

      <!-- UUID: 5df260b4-ce58-4515-a093-85ba819d04ea -->
      <!-- TARGET: m68k*-linux* -->
      <formalpara>
        <title>ColdFire multi-GOT support</title>
        <para>
          On ColdFire GNU/Linux targets, the linker now supports
          generation of multiple GOTs.  This change avoids certain
          "relocation truncated to fit" linker errors, which sometimes
          resulted when linking large PIC object files such as shared
          libraries.  For additional information, refer to the
          <option>--got=<replaceable>type</replaceable></option> option
          in the linker documentation.
        </para>
      </formalpara>

      <!-- UUID: 69856a5d-c56c-4d9a-93f0-d55a346b2c10 -->
      <!-- TARGET: arm*-* -->
      <formalpara>
       <title>Disassembler bug fix</title>
       <para>
        A bug in the disassembler has been fixed that formerly caused
        <command>objdump</command> to crash when processing raw binary
        files, or other executables with an empty symbol table.
       </para> 
      </formalpara>

      <!-- UUID: 0e3f57b7-d75c-45d2-8118-c39c0546f6bd -->
      <!-- TARGET: arm*-* -->
      <formalpara>
        <title>MOVW and MOVT relocations</title>
        <para>
	  A linker error that resulted in incorrect offsets when processing
	  relocations on <code>MOVW</code> and <code>MOVT</code> instructions
	  referencing mergeable string sections has been fixed.
        </para>
      </formalpara>

      <!-- UUID: 977cfbec-aa21-41d8-97a9-7f40ddbc2e10 -->
      <!-- TARGET: mips*-* -->
      <formalpara>
        <title>New Octeon instructions</title>
        <para>
          The assembler now supports the Cavium Octeon instructions
          <literal>saa</literal> and <literal>saad</literal>.
        </para>
      </formalpara>

      <!-- UUID: 3a7d864c-8c6a-449c-a1ab-18b945159047 -->
      <!-- TARGET: * -->
      <formalpara>
        <title>Linker error allocating ELF segments</title>
        <para>
          A bug where the linker produces an incorrect error message
          with segments at the top of the address space has been fixed.
        </para>
      </formalpara>

      <!-- UUID: 457014ea-b17b-46fa-828a-e46b14025474 -->
      <!-- TARGET: * -->
      <formalpara>
        <title>Invalid object file after strip</title>
        <para>
	 A bug in the assembler has been fixed that formerly caused
	 <literal>.set <replaceable>symbol</replaceable>
	 <replaceable>expression</replaceable></literal>
	 constructs to emit <replaceable>symbol</replaceable> in the
	 wrong section.  This in turn caused inconsistent behavior
	 after stripping the symbol table. 
        </para>
      </formalpara>

      <!-- UUID: ca55c9ce-d076-41af-82a7-0b8ee75edc10 -->
      <!-- TARGET: * -->
      <formalpara>
        <title>Linker crash on invalid input files</title>
        <para>
          Some older versions of GCC generated object files with
          invalid mergeable string sections when compiling with
          <option>-fmerge-all-constants</option>.  This bug was fixed
          in &csl_sgxx; as of version 4.1-43.  However, since system
          libraries included with some GNU/Linux distributions were
          affected by this bug, the linker has now been changed to
          accept object files with such invalid sections, rather than
          crash or produce an error message.
        </para>
      </formalpara>

      <!-- UUID: 67f52344-208d-4617-a661-7a806928f6c6 -->
      <!-- TARGET: arm*-* -->
      <formalpara>
        <title>Overlapping operands for long multiply instructions</title>
        <para>
	  An incorrect assembler warning has been removed in the case of
	  overlapping source and destination operands for
	  <code>UMULL</code>, <code>SMULL</code>, <code>UMLAL</code>
	  and <code>SMLAL</code> instructions on ARMv6 processors.
        </para>
      </formalpara>

      <!-- UUID: 9bdc3b0d-f36b-4eba-8699-d4a39b186179 -->
      <!-- TARGET: mips*-linux* -->
      <formalpara>
        <title><command>&csl_target;-objcopy</command> and <command>&csl_target;-strip</command> on prelinked binaries</title>
        <para>
          A bug causing errors from
          <command>&csl_target;-objcopy</command> and
          <command>&csl_target;-strip</command> on prelinked binaries
          has been fixed.
        </para>
      </formalpara>

      <!-- UUID: 35c9cbe7-29ed-441a-aafa-30f02d7d6491 -->
      <!-- TARGET: m68k-* -->
      <formalpara>
        <title>Disassembly of <code>%sr</code> and <code>%ccr</code>
move instructions</title>
        <para>
          Disassembly now correctly handles instructions that
	  move a constant to the <code>%sr</code> or
          <code>%ccr</code> registers.
        </para>
      </formalpara>

      <!-- UUID: f27d2950-f602-442f-93e8-b54787623693 -->
      <!-- TARGET: *-mingw* -->
      <formalpara>                                                                                             
        <title>Windows resource compiler</title>
        <para>
          Several problems related to reading and processing
          <filename>.rc</filename> or <filename>.res</filename>
          files with <command>windres</command> have been fixed.
        </para>
      </formalpara>

      <!-- UUID: f933984e-37c3-46c5-9e5a-45478d555626 -->
      <!-- TARGET: mips*-* -->
      <formalpara>
        <title>Linker errors for large programs</title>
        <para>
          A bug causing linker errors for some programs using many
          dynamic symbols has been fixed.
        </para>
      </formalpara>

      <!-- UUID: b2d48039-d044-43cd-920c-e52450189666 -->
      <!-- TARGET: mips*-* -->
      <formalpara>
        <title>Incorrect <literal>jalr</literal> operands</title>
        <para>
          The assembler now reports an error if identical source
          and destination registers are specified for the <literal>jalr</literal>
	  instruction.
        </para>
      </formalpara>

      <!-- UUID: 0e1fdb6e-5149-43ef-8b42-40ef5f7094df -->
      <!-- TARGET: mips*-* -->
      <formalpara>
        <title>Support for large alignment values</title>
        <para>
          The assembler <code>.align</code> directive and GCC
          <code>aligned</code>
          attribute both now accept alignments up to 2^28 bytes.
	</para>
      </formalpara>

      <!-- UUID: 35b7e99d-cceb-428b-bd75-f5db3d814bee -->
      <!-- TARGET: mips*-* -->
      <formalpara>
        <title>Linker errors for large programs</title>
        <para>
          A bug causing linker errors for some programs with hundreds
          of megabytes of statically-allocated data has been fixed.
        </para>
      </formalpara>

      <!-- UUID: ecb4ca3e-8e43-4022-b018-2b4894079777 -->
      <!-- TARGET: m68k-* -->
      <formalpara>
        <title>ColdFire 51QE processor support</title>
        <para>
          &csl_sgxx; now supports Freescale ColdFire 51QE processor.
          You can specify the <option>-mcpu=51qe</option> option to
          GCC and GAS to generate code for this processor.
        </para>
      </formalpara>

      <!-- UUID: a8d562ca-0233-46a4-9b3d-c3a438779de2 -->
      <!-- TARGET: mips*-* -->
      <formalpara>
        <title>Loongson-2E and Loongson-2F processor support</title>
        <para>
          The binutils package now supports the ST Microelectronics
	  Loongson-2E processor and has preliminary support for the
	  Loongson-2F.  To assemble for these processors, invoke the
	  assembler with <option>-march=loongson2e</option> or
	  <option>-march=loongson2f</option> as appropriate.
        </para>
      </formalpara>

      <!-- UUID: 7257b2a0-4646-4a7c-a8c6-acc633c90287 -->
      <!-- TARGET: * -->
      <formalpara>
        <title>Binutils update</title>
        <para>
          The binutils package has been updated to the 2007-08-19
	  version of the pre-2.18 FSF trunk.  This contains many
	  new improvements and bug fixes.  For more information,
	  refer to the manuals for the individual utilities, and
	  to the binutils web site at
	  <uri>http://www.gnu.org/software/binutils/</uri>.
        </para>
      </formalpara>

      <!-- UUID: b9965b8f-e631-4713-b412-18bc0c5f4762 -->
      <!-- TARGET: * -->
      <formalpara>
        <title>Improved diagnostics for region overflow</title>
        <para>
          The linker will now give more helpful diagnostics when
	  the object files being linked are too big for one of the
	  memory regions defined in the linker script.
        </para>
      </formalpara>

      <!-- UUID: f6f8acf9-5194-417c-8b38-8f50cf2a7232 -->
      <!-- TARGET: mips*-* -->
      <formalpara>
        <title>ABI markings for MIPS binaries</title>
        <para>
	  GCC and Binutils now mark MIPS binaries according to their
	  floating point calling convention.  The linker reads this
	  information and warns when mismatched object files are
	  linked together.  For example, the linker warns if
	  <option>-msoft-float</option> objects are linked to a
	  <option>-mhard-float</option> C library.
	  GDB uses the same information to correctly call
	  functions from the command line and display return values
	  after <command>finish</command>.
        </para>
      </formalpara>

      <!-- UUID: 3753b4bf-ad3f-4a51-9be0-eb8dad79ca7e -->
      <!-- TARGET: *-mingw32 -->
      <formalpara>
        <title>C++ exception handling with relocatable links</title>
        <para>
          A defect in relocatable linking (<command>&csl_target;-ld
          -r</command>) of C++ programs using exception handling has
          been fixed.  Such programs formerly appeared to link
          correctly, but handlers established by
          <literal>try</literal>/<literal>catch</literal> blocks
          failed to execute.
        </para> 
      </formalpara>

      <!-- UUID: db59863a-55e8-4917-9497-cdb5a7aaff41 -->
      <!-- TARGET: fido*-* -->
      <formalpara>
        <title><code>movec</code> instruction</title>
        <para>
          The assembler now accepts <code>%mbo</code> for Memory Base
          Offset register in the <code>movec</code> instruction.
          <code>%mbb</code> continues to be accepted as a synonym of
          <code>%mbo</code> for backward compatibility.
        </para>
      </formalpara>

      <!-- UUID: 75767301-8648-49ff-a31d-ed709f5425f0 -->
      <!-- TARGET: arm*-* -->
      <formalpara>
        <title>Calls to undefined weak symbols</title>
        <para>
	  The linker now implements semantics that comply to the ARM EABI for
	  <literal>R_ARM_CALL</literal> and <literal>T_ARM_THM_CALL</literal>
	  relocations against undefined weak symbols.  These now result
	  in a jump to the next instruction.
        </para>
      </formalpara>

      <!-- UUID: 177f6281-7b20-4273-b1fa-bd3e6c3b7ecd -->
      <!-- TARGET: arm*-* -->
      <formalpara>
        <title>NEON coprocessor system registers</title>
        <para>
	  The assembler now accepts the <literal>MVFR0</literal> and
	  <literal>MVFR1</literal> coprocessor registers in
	  <code>fmrx</code> and <code>fmxr</code> instructions.
        </para>
      </formalpara>

      <!-- UUID: bf6c6f88-5172-42e9-ae88-35fb5cf18534 -->
      <!-- TARGET: arm*-* -->
      <formalpara>
        <title>EABI object attribute merging</title>
        <para>
          The linker now properly merges EABI object attributes into
          its output file.
        </para>
      </formalpara>

      <!-- UUID: 8bef0c36-4ea4-48f3-be35-7ec5dd43e08b -->
      <!-- TARGET: arm*-* -->
      <formalpara>
        <title>Thumb-2 shift instruction aliases</title>
        <para>
	  The assembler now accepts <literal>mov</literal> with shifted
	  operands as an alias for Thumb-2 shift instructions.
	  For example <code>mov r0, r1, lsl r2</code> is encoded as
	  <code>lsl r0, r1, r2</code>.
        </para>
      </formalpara>

      <!-- UUID: 2174187c-835b-4c02-95a8-d355eea6aa80 -->
      <!-- TARGET: m68k-* -->
      <formalpara>
        <title>Coprocessor instructions</title>
        <para>
          Support has been added for ColdFire coprocessor instructions.
        </para>
      </formalpara>

      <!-- UUID: 2cf1292a-f39a-4f5d-93e4-83197fef71ea -->
      <!-- TARGET: arm*-* -->
      <formalpara>
        <title>Thumb-2 doubleword writeback addressing modes</title>
        <para>
	  An assembler bug that caused writeback addressing modes for
	  <literal>ldrd</literal> and <literal>strd</literal> to be
	  incorrectly encoded has been fixed.
        </para>
      </formalpara>

      <!-- UUID: afd0d3e6-b375-4842-bc26-5f2d03d0f830 -->
      <!-- TARGET: * -->
      <formalpara>
        <title>Assembler skipping <literal>\</literal> characters</title>
        <para>
          A bug is fixed where the assembler would skip <literal>\</literal>
          characters when they appeared at certain positions in the
          input file.  This bug primarily affected assembler macros.
        </para>
      </formalpara>

      <!-- UUID: bf7881b7-bc58-40b5-bad8-467af6fb0fd1 -->
      <!-- TARGET: arm*-* -->
      <formalpara>
        <title>Thumb-2 exception return instructions</title>
        <para>
	  An assembler bug that caused <code>subs pc, lr, #const</code> and
	  <code>movs pc, lr</code> to be incorrectly encoded has been fixed.
        </para>
      </formalpara>

      <!-- UUID: 180be6f1-8efa-41a9-991f-ff55ac12b6ea -->
      <!-- TARGET: mips*-* -->
      <formalpara>
        <title>MIPS <code>.set</code> directives</title>
        <para>
          The assembler now accepts <code>.set <replaceable>symbol</replaceable>,<replaceable>value</replaceable></code>
          directives in addition to MIPS-specific uses of
          <code>.set</code>.
        </para>
      </formalpara>

      <!-- UUID: 960d8ae2-0da1-42ca-93d3-33d442c0e05a -->
      <!-- TARGET: arm*-linux* -->
      <formalpara>
        <title>Thumb-2 branches to shared libraries</title>
        <para>
	  The linker can now generate PLT stubs for
	  <literal>R_ARM_THM_JUMP24</literal> and
	  <literal>R_ARM_THM_JUMP19</literal> relocations.
	  This occurs when Thumb-2 branch instructions refer to
	  symbols imported from shared libraries.
        </para>
      </formalpara>

      <!-- UUID: e1bb874b-011a-41e7-afb5-5a1ed27669dc -->
      <!-- TARGET: arm*-* -->
      <formalpara>
        <title>Uppercase special register names</title>
        <para>
	  The assembler now accepts both uppercase and lowercase
	  special register names when assembling <literal>msr</literal>
	  and <literal>mrs</literal> instructions for the Microcontroller
	  profile of the ARM Architecture.
        </para>
      </formalpara>

      <!-- UUID: 8eb49223-2b34-4001-82fa-c6c25187dcd8 -->
      <!-- TARGET: m68k-* -->
      <formalpara>
        <title>ColdFire <code>wdebug.l</code> instructions</title>
        <para>
          The assembler now correctly recognizes <code>wdebug.l</code>
          mnemonics.  Previously only <code>wdebug</code> variants
          were allowed.
        </para>
      </formalpara>

      <!-- UUID: 46f50791-532d-4090-85f9-8df897f8df7e -->
      <!-- TARGET: arm*-* -->
      <formalpara>
	<title>ARM EABI compliance</title>
	<para>
	 Objects produced by &csl_sgxx; are now marked as ARM ELF 
	 version 5 rather than ARM ELF version 4.  This reflects 
	 compliance with recent revisions of the ARM EABI.
	 &csl_sgxx; still accepts objects marked with version 4.
	</para>
      </formalpara>

      <!-- UUID: ab551837-8693-472f-87ee-4324473ee45b -->
      <!-- TARGET: arm*-* -->
      <formalpara>
        <title>Conditional Thumb-2 branch instructions</title>
        <para>
	  A linker bug that could cause objects involving conditional
	  Thumb-2 branch instructions to be incorrectly rejected has
	  been fixed.
        </para>
      </formalpara>

      <!-- UUID: 57c7f878-b1d6-4a76-89a0-e56638a45554 -->
      <!-- TARGET: arm*-* -->
      <formalpara>
        <title>Linking of non-ELF images</title>
        <para>
          A linker bug that could cause a crash when linking non-ELF
	  objects for ARM targets has been fixed.
        </para>
      </formalpara>

      <!-- UUID: 137779dc-f8f0-4255-8481-9347cb648b74 -->
      <!-- TARGET: arm*-* -->
      <formalpara>
        <title>Improved assembler diagnostics for 8-bit offsets</title>
        <para>
          The assembler now correctly diagnoses out-of-range offsets to
	  instructions such as <literal>LDRD</literal> as 8-bit rather
	  than half-word offsets.
        </para>
      </formalpara>

      <!-- UUID: 1ecbee14-e384-45e2-a840-ccc48ee695ee -->
      <!-- TARGET: arm*-* -->
      <formalpara>
        <title>The <literal>\@</literal> assembler pseudo-variable</title>
        <para>
	  A bug in the assembler that caused uses of the <literal>\@</literal>
	  pseudo-variable to be mis-parsed as comments has been fixed.
        </para>
      </formalpara>

      <!-- UUID: f794bd84-ab3f-495f-a994-904fdc95c7ed -->
      <!-- TARGET: * -->
      <formalpara>
        <title>Binutils update</title>
        <para>
	  The binutils package has been updated from 
	  version 2.17 to the pre-2.18 FSF trunk.  This is a significant
	  update with many improvements and bug fixes.
        </para>
      </formalpara>
      <para>
	Changes to the assembler (<command>as</command>) include:
        <itemizedlist>
          <listitem>
            On MIPS targets, support for additional processors
            and the SmartMIPS and DSP Release 2 extensions has been added.
          </listitem>
        </itemizedlist>
      </para>
      <para>
	New linker (<command>ld</command>) features include:
        <itemizedlist>
          <listitem>
            A new command-line option <option>--default-script</option>
            has been added to give more precise control over linker script
            processing.
          </listitem>
          <listitem>
            There are new command-line options
            <option>-Bsymbolic-functions</option>,
            <option>--dynamic-list</option>,
            <option>--dynamic-list-cpp-new</option>, and
            <option>--dynamic-list-data</option> to control symbols
            that should be dynamically linked.
          </listitem>
          <listitem>
            The new <option>--print-gc-sections</option> option lists
            sections removed by garbage collection.
          </listitem>
        </itemizedlist>
      </para>
      <para>
	Other changes include:
        <itemizedlist>
          <listitem>
            The <command>objcopy</command> utility has a new
            <option>--extract-symbol</option> option to extract only
            symbol table information from the input file.
          </listitem>
          <listitem>
            The <command>gprof</command> utility now allows input files
            to have histogram records for several memory ranges, provided
            those ranges are disjoint.
          </listitem>
        </itemizedlist>
      </para>
      <para>
	For more information, refer to the manuals for the individual
        utilities, and the binutils web site at
        <uri>http://www.gnu.org/software/binutils/</uri>.
      </para>

<!-- Release notes end here.  -->
